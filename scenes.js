require('dotenv').config()
const moment = require('moment-timezone');
moment.locale('ru');
moment.tz.setDefault('Europe/Moscow');
const Scene = require('node-vk-bot-api/lib/scene');
const Markup = require('node-vk-bot-api/lib/markup');
const { GoogleTable } = require('./spreadsheet');
const logger = require('./logger');


const changeDuties = new Scene('Change Duties',
    // step 0
    async ctx => {
        try {
            ctx.session.tableM3 = new GoogleTable({ sheetID: process.env.SPREADSHEET_ID, sheetIndex: process.env.SHEET_INDEX });
            await ctx.session.tableM3.getSheetRows(process.env.SHEET_INDEX);
        
            // –ø—Ä–æ–≤–µ—Ä—è–µ–º—è —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –ø—É—Å—Ç–∞—è
            if (ctx.session.tableM3.rows[0] != undefined) { // –µ—Å–ª–∏ –Ω–µ –ø—É—Å—Ç–∞—è
                let today = moment();

                for (let i = ctx.session.tableM3.rows.length - 1; i >= 0; i--) {
                    let dateUp = moment(ctx.session.tableM3.rows[i]['–ü–µ—Ä–∏–æ–¥'], 'DD-MM-YY').endOf('day');
                    let weekBefore = moment(ctx.session.tableM3.rows[i]['–ü–µ—Ä–∏–æ–¥'], 'DD-MM-YY').subtract(6, 'days');
                    
                    if (today <= dateUp && today > weekBefore) {
                        ctx.session.currentRow = i;
                        ctx.scene.step = 2;
                        ctx.reply(`üìÖ –í —Å—Ä–æ–∫ –¥–æ ${dateUp.format('L')} –¥–µ–∂—É—Ä—è—Ç –ø–æ –∫—É—Ö–Ω–µ - ${ctx.session.tableM3.rows[i]['–ö—É—Ö–Ω—è'].replace(' ‚úîÔ∏è', '')}, –ø–æ –ö–í–¢ - ${ctx.session.tableM3.rows[i]['–ö–í–¢'].replace(' ‚úîÔ∏è', '')}. 
                                    
                                    üìù –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ–∂—É—Ä–Ω—ã—Ö, –≤–≤–µ–¥–∏—Ç–µ: "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç", –≥–¥–µ –∏–º—è_–∫—É—Ö–Ω—è - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫—É—Ö–Ω–µ, –∏–º—è_–∫–≤—Ç - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫–æ—Ä–∏–¥–æ—Ä—É, –≤–∞–Ω–Ω–µ –∏ —Ç—É–∞–ª–µ—Ç—É. 
                                    
                                    ‚ùå –õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –æ–ø–µ—Ä–∞—Ü–∏–∏.`, null, Markup
                            .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                            .inline()
                        );
                        return;
                    } else if (today > dateUp || i == 0) {
                        ctx.scene.next();
                        ctx.reply(`üÜì –ù–∞ —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –¥–µ–∂—É—Ä—Å—Ç–≤ –Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ. 
                        
                                    üßπ –ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑ –¥–µ–∂—É—Ä–∏–ª–∏ –ø–æ –∫—É—Ö–Ω–µ - ${ctx.session.tableM3.rows[ctx.session.tableM3.rows.length - 1]['–ö—É—Ö–Ω—è'].replace(' ‚úîÔ∏è', '')}, –ø–æ –ö–í–¢ - ${ctx.session.tableM3.rows[ctx.session.tableM3.rows.length - 1]['–ö–í–¢'].replace(' ‚úîÔ∏è', '')}. 
                                    
                                    üìù –ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –ø–µ—Ä–∏–æ–¥, –≤–≤–µ–¥–∏—Ç–µ: "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥", –≥–¥–µ –∏–º—è_–∫—É—Ö–Ω—è - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫—É—Ö–Ω–µ, –∏–º—è_–∫–≤—Ç - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫–æ—Ä–∏–¥–æ—Ä—É, –≤–∞–Ω–Ω–µ –∏ —Ç—É–∞–ª–µ—Ç—É, –¥–¥.–º–º.–≥–≥ - —Å—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–∂—É—Ä—Å—Ç–≤–∞. 
                                    
                                    ‚ùå –õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –æ–ø–µ—Ä–∞—Ü–∏–∏.`, null, Markup
                            .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                            .inline()
                        );
                        return;
                    }
                }
            }
        } catch (error) {
            logger.error(error);
            ctx.scene.leave();
            return ctx.reply('‚ùó–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —Ç–∞–±–ª–∏—Ü–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–∞.');
        }
        // –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è
        ctx.scene.next();
        ctx.reply(`üìí –ì—Ä–∞—Ñ–∏–∫ –¥–µ–∂—É—Ä—Å—Ç–≤ –ø—É—Å—Ç–æ–π. 
        
                    üìù –ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –ø–µ—Ä–∏–æ–¥, –≤–≤–µ–¥–∏—Ç–µ: "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥", –≥–¥–µ –∏–º—è_–∫—É—Ö–Ω—è - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫—É—Ö–Ω–µ, –∏–º—è_–∫–≤—Ç - –∏–º—è –¥–µ–∂—É—Ä–Ω–æ–≥–æ –ø–æ –∫–æ—Ä–∏–¥–æ—Ä—É, –≤–∞–Ω–Ω–µ –∏ —Ç—É–∞–ª–µ—Ç—É, –¥–¥.–º–º.–≥–≥ - —Å—Ä–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–µ–∂—É—Ä—Å—Ç–≤–∞. 
                    
                    ‚ùå –õ–∏–±–æ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏.`, null, Markup
            .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
            .inline()
        );
    },
    // step 1, add.
    async ctx => {
        if (typeof ctx.message.payload !== 'undefined') {
            ctx.scene.leave();
            return ctx.reply('‚ö† –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–µ–∂—É—Ä–Ω—ã—Ö.');
        }
        
        ctx.session.newRecord = ctx.message.text.split(' ');
        
        if (ctx.session.newRecord.length != 3) {
            return ctx.reply(`‚ùó–í—ã –≤–≤–µ–ª–∏ –º–µ–Ω—å—à–µ –∏–ª–∏ –±–æ–ª—å—à–µ —Ç—Ä—ë—Ö —Å–ª–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. 
            
                                üìù –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏.`, null, Markup
                    .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                    .inline()
            );
        }

        let newDutyDate = moment(ctx.session.newRecord[2], 'DD-MM-YY').endOf('day');

        if (newDutyDate.format('L') == 'Invalid date') {
            return ctx.reply(`‚ùó–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É. 
            
                                üìù –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞".`, null, Markup
                    .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                    .inline()
            );
        }

        if (newDutyDate < moment()) {
            return ctx.reply(`‚ùó–í—ã –≤–≤–µ–ª–∏ —É–∂–µ –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É. 
            
                                üìù –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞".`, null, Markup
                    .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                    .inline()
            );
        }

        if (newDutyDate > moment().add(7, 'days').endOf('day')) {
            return ctx.reply(`‚ùó–í—ã –≤–≤–µ–ª–∏ –¥–∞—Ç—É, –æ–ø–µ—Ä–µ–∂–∞—é—â—É—é —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –±–æ–ª—å—à–µ, —á–µ–º –Ω–∞ –Ω–µ–¥–µ–ª—é. 
            
                                üìù –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç –¥–¥.–º–º.–≥–≥" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞".`, null, Markup
                    .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                    .inline()
            );
        }

        try {
            await ctx.session.tableM3.addRow({ –ü–µ—Ä–∏–æ–¥: newDutyDate.format('L'), –ö—É—Ö–Ω—è: ctx.session.newRecord[0], –ö–í–¢: ctx.session.newRecord[1] });
        } catch (error) {
            logger.error(error);
            ctx.scene.leave();
            return ctx.reply('‚ùó–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —Ç–∞–±–ª–∏—Ü–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ.');
        }

        ctx.scene.leave();
        ctx.reply('‚úÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —Ç–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥ –¥–µ–∂—É—Ä—Å—Ç–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    },
    // step 2, change.
    async ctx => {
        if (typeof ctx.message.payload !== 'undefined') {
            ctx.scene.leave();
            return ctx.reply('‚ö† –í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–µ–∂—É—Ä–Ω—ã—Ö.');
        }
        
        ctx.session.newRecord = ctx.message.text.split(' ');

        if (ctx.session.newRecord.length != 2) {
            return ctx.reply(`‚ùó–í—ã –≤–≤–µ–ª–∏ –º–µ–Ω—å—à–µ –∏–ª–∏ –±–æ–ª—å—à–µ –¥–≤—É—Ö —Å–ª–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª. 
                                
                                üìù –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∏–º—è_–∫—É—Ö–Ω—è –∏–º—è_–∫–≤—Ç" –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è –æ—Ç–º–µ–Ω—ã –æ–ø–µ—Ä–∞—Ü–∏–∏.`, null, Markup
                    .keyboard([Markup.button('–û—Ç–º–µ–Ω–∞', 'negative')])
                    .inline()
            );
        }

        try {
            ctx.session.tableM3.rows[ctx.session.currentRow]['–ö—É—Ö–Ω—è'] = ctx.session.newRecord[0];
            ctx.session.tableM3.rows[ctx.session.currentRow]['–ö–í–¢'] = ctx.session.newRecord[1];
            await ctx.session.tableM3.rows[ctx.session.currentRow].save();
        } catch (error) {
            logger.error(error);
            ctx.scene.leave();
            return ctx.reply('‚ùó–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —Ç–∞–±–ª–∏—Ü–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∑–∞–Ω–æ–≤–æ.');
        }

        ctx.scene.leave();
        ctx.reply('‚úÖ –¢–µ–∫—É—â–∏–µ –¥–µ–∂—É—Ä–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã!');
    }
);


module.exports = { changeDuties };